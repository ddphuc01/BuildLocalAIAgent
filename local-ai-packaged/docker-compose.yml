version: '3.8'

services:
  # Ollama for local LLM
  ollama:
    image: ollama/ollama:latest
    container_name: ollama
    ports:
      - "11434:11434"
    volumes:
      - ollama_data:/root/.ollama
    environment:
      - OLLAMA_ORIGINS=*
    restart: unless-stopped
    networks:
      - ai-network

  # Open WebUI for chat interface
  open-webui:
    image: ghcr.io/open-webui/open-webui:main
    container_name: open-webui
    ports:
      - "3000:8080"
    environment:
      - OLLAMA_BASE_URL=http://ollama:11434
      - WEBUI_SECRET_KEY=your-secret-key-here
    volumes:
      - open_webui_data:/app/backend/data
    depends_on:
      - ollama
    restart: unless-stopped
    networks:
      - ai-network

  # Supabase for database and auth
  supabase:
    image: supabase/supabase:latest
    container_name: supabase
    ports:
      - "5432:5432"
      - "54321:54321"
      - "54323:54323"
    environment:
      - POSTGRES_PASSWORD=your-postgres-password
      - JWT_SECRET=your-jwt-secret
      - ANON_KEY=your-anon-key
      - SERVICE_ROLE_KEY=your-service-role-key
    volumes:
      - supabase_data:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - ai-network

  # n8n for workflow automation
  n8n:
    image: n8nio/n8n:latest
    container_name: n8n
    ports:
      - "5678:5678"
    environment:
      - N8N_BASIC_AUTH_ACTIVE=true
      - N8N_BASIC_AUTH_USER=admin
      - N8N_BASIC_AUTH_PASSWORD=your-password
      - N8N_ENCRYPTION_KEY=your-encryption-key
      - N8N_USER_MANAGEMENT_JWT_SECRET=your-jwt-secret
      - N8N_HOST=localhost
      - N8N_PORT=5678
      - N8N_PROTOCOL=http
    volumes:
      - n8n_data:/home/node/.n8n
    depends_on:
      - supabase
    restart: unless-stopped
    networks:
      - ai-network

  # Flowise for AI agent building
  flowise:
    image: flowiseai/flowise:latest
    container_name: flowise
    ports:
      - "3001:3000"
    environment:
      - PORT=3000
      - FLOWISE_USERNAME=admin
      - FLOWISE_PASSWORD=your-password
      - SECRETKEY=your-secret-key
    volumes:
      - flowise_data:/root/.flowise
    restart: unless-stopped
    networks:
      - ai-network

  # Neo4j for knowledge graphs
  neo4j:
    image: neo4j:5.15
    container_name: neo4j
    ports:
      - "7474:7474"
      - "7687:7687"
    environment:
      - NEO4J_AUTH=neo4j/your-password
      - NEO4J_PLUGINS=["apoc", "graph-data-science"]
      - NEO4J_dbms_security_procedures_unrestricted=gds.*,apoc.*
    volumes:
      - neo4j_data:/data
      - neo4j_logs:/logs
    restart: unless-stopped
    networks:
      - ai-network

  # Qdrant for vector storage
  qdrant:
    image: qdrant/qdrant:latest
    container_name: qdrant
    ports:
      - "6333:6333"
      - "6334:6334"
    volumes:
      - qdrant_data:/qdrant/storage
    restart: unless-stopped
    networks:
      - ai-network

  # SearXNG for private search
  searxng:
    image: searxng/searxng:latest
    container_name: searxng
    ports:
      - "8080:8080"
    volumes:
      - searxng_data:/etc/searxng
    environment:
      - BASE_URL=http://localhost:8080/
    restart: unless-stopped
    networks:
      - ai-network

  # Langfuse for LLM observability
  langfuse:
    image: langfuse/langfuse:latest
    container_name: langfuse
    ports:
      - "3030:3000"
    environment:
      - DATABASE_URL=postgresql://postgres:your-postgres-password@supabase:5432/langfuse
      - NEXTAUTH_SECRET=your-nextauth-secret
      - SALT=your-salt
      - NEXTAUTH_URL=http://localhost:3030
    depends_on:
      - supabase
    restart: unless-stopped
    networks:
      - ai-network

  # Caddy for reverse proxy and HTTPS
  caddy:
    image: caddy:alpine
    container_name: caddy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile
      - caddy_data:/data
      - caddy_config:/config
    depends_on:
      - ollama
      - open-webui
      - n8n
      - flowise
    restart: unless-stopped
    networks:
      - ai-network

volumes:
  ollama_data:
  open_webui_data:
  supabase_data:
  n8n_data:
  flowise_data:
  neo4j_data:
  neo4j_logs:
  qdrant_data:
  searxng_data:
  caddy_data:
  caddy_config:

networks:
  ai-network:
    driver: bridge